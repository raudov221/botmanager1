from vkbottle.bot import Bot, Message
from vkbottle.keyboard import Keyboard, Text
import random
import random as r
import json

token = "bfd9b4ba0ec9739a49f46081f98b59751ba31766914b3245d524d6be68d13ad575fdb9a9d778303dae035"
group_id = 201150448

bot = Bot(token)

def reg( ans ):
    data = json.load( open( "data.json", "r" ) )
    if str( ans.from_id ) in data[ "user" ]:
        pass
    else:
        data[ "user" ][ str( ans.from_id ) ] = "reg"
        data[ "balance" ][ str( ans.from_id ) ] = "0"
        data[ "replenish" ][ str( ans.from_id ) ] = "0"
        data[ "received" ][ str( ans.from_id ) ] = "0"
        data[ "admin" ][ str( ans.from_id ) ] = "0"
        data[ "pred" ][ str( ans.from_id ) ] = "0"
        data[ "id" ][ str( ans.from_id ) ] = str( len( data[ "user" ] ) )
        json.dump( data, open( "data.json", "w" ) )

@bot.on.chat_message(text=["–ü–æ–º–æ—â—å"])
async def wrapper(ans: Message):
    data = json.load( open( "data.json", "r" ) )
    await ans(f'ü§© –ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã: \n–î–ª—è –∏–≥—Ä–æ–∫–æ–≤ –∏ –∞–¥–º–∏–Ω–æ–≤: \n 1.!—Å–∫–∞–∂–∏ <–≤–∞—à–∞ —Ñ—Ä–∞–∑–∞>\n 2.!–≤—ã–±–µ—Ä–∏ <–≤–∞—à —Ç–µ–∫—Å—Ç –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤> <–≤—Ç–æ—Ä–æ–π —Ç–µ–∫—Å—Ç –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤> \n 3.–ö–ª–∏–∫ \n 4.–ë–∞–ª–∞–Ω—Å \n5.!—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è \n\nüòé –î–ª—è –∞–¥–º–∏–Ω–æ–≤: –ö–∏–∫ <–ø—Ä–∏—á–∏–Ω–∞>')
    reg( ans )

@bot.on.chat_message(text=["!—Å–∫–∞–∂–∏ <you>"])
async def wrapper(ans: Message, you):
    reg( ans )
    await ans(f'–ú–µ–Ω—è –ø–æ–ø—Ä–æ—Å–∏–ª–∏ —Å–∫–∞–∑–∞—Ç—å: {you}')
    await bot.api.messages.send(peer_id = ans.peer_id, random_id = 0, sticker_id = 51564)

@bot.on.chat_message(text=["!—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"])
async def wrapper(ans: Message):
    data = json.load( open( "data.json", "r" ) )
    await ans(f'–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å!')
    reg( ans )

@bot.on.chat_message( text = [ "üí∞ –ë–∞–ª–∞–Ω—Å","–ë–∞–ª–∞–Ω—Å", "–±–∞–ª" ], lower = True )
async def wrapper( ans: Message ):
    data = json.load( open( "data.json", "r" ) )
    reg( ans )
    await ans( f"üí∏ –í–∞—à –±–∞–ª–∞–Ω—Å - {data[ 'balance' ][ str( ans.from_id ) ]}" )

@bot.on.chat_message( text = [ "–∫–∞–∑–∏–Ω–æ" ], lower = True )
async def wrapper( ans: Message ):
    data = json.load( open( "data.json", "r" ) )
    reg( ans )
    await ans( f"‚õî –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ñ–æ—Ä–º–∞—Ç! <–∫–∞–∑–∏–Ω–æ (—Å—Ç–∞–≤–∫–∞)>" )

@bot.on.chat_message( text = [ "–∫–∞–∑–∏–Ω–æ <sum>" ], lower = True )
async def wrapper( ans: Message, sum ):
    data = json.load( open( "data.json", "r" ) )
    json.dump( data, open( "data.json", "w" ) )
    reg( ans )
    if int( int( data[ "balance" ][ str( ans.from_id ) ] ) < sum ):
        await ans( f"‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!" )

@bot.on.chat_message(text=["!–∫–ª–∏–∫"])
async def wrapper(ans: Message):
    data = json.load( open( "data.json", "r" ) )
    reg( ans )
    data[ "balance" ][ str( ans.from_id ) ] = int( data[ "balance" ][ str( ans.from_id ) ] ) + int( data[ "for_click" ] )
    await ans(f'–í—ã –∫–ª–∏–∫–Ω—É–ª–∏!')

@bot.on.chat_message(text=["!–≤—ã–±–µ—Ä–∏ <sum> –∏–ª–∏ <sim>"])
async def wrapper(ans: Message, sum, sim):
    reg( ans )
    await ans(f'–Ø –≤—ã–±—Ä–∞–ª: {random.choice([sum, sim])}')

@bot.on.chat_message(text=["@all", "*all" "@all," "*all,"])
async def wrapper(ans: Message):
    reg( ans )
    ban = ans.from_id
    await ans(f"–¢–µ–±—è –∏—Å–∫–ª—é—á–∏–ª–∏ –ø–æ –ø—Ä–∏—á–∏–Ω–µ: all")
    await bot.api.messages.remove_chat_user(
        chat_id=ans.peer_id - 2000000000, member_id=ban
    )


@bot.on.chat_message(text=["!–∫–∏–∫ <da>"])
async def wrapper(ans: Message, da):
    reg( ans )
    user = ans.reply_message.from_id
    await ans(f"–¢–µ–±—è –∏—Å–∫–ª—é—á–∏–ª–∏ –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {da}")
    await bot.api.messages.remove_chat_user(
        chat_id=ans.peer_id - 2000000000, member_id=user
    )

bot.run_polling( skip_updates = False )