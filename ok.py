from vkbottle import *
from PIL import Image, ImageDraw, ImageFont
import sys
import json
import re

bot=Bot('32e0395facce5c1284e84ba0a17ff33d07b46d192516868fbc81d9f9962d10e36cdbb3a26c0cab931b08f')
group_id = 202725378
photo_uploader = PhotoUploader(bot.api, generate_attachment_strings=True)  # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞

def reg( ans ):
    data = json.load( open( "data.json", "r" ) )
    if str( ans.from_id ) in data[ "user" ]:
       	pass
    else:
        data[ "user" ][ str( ans.from_id ) ] = "reg"
        data[ "name" ][ str( ans.from_id ) ] = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        data[ "status" ][ str( ans.from_id ) ] = "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É '/–∑–∞–º–µ—Ç–∫–∏ {–Ω–∞–∑–≤–∞–Ω–∏–µ}' –∏ –≤ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ —Ç–µ–∫—Å—Ç. –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∑–∞–º–µ—Ç–∫—É –∏–∑ –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è."
        data[ "prava" ][ str( ans.from_id ) ] = 0
        data[ "pred" ][ str( ans.from_id ) ] = 0
        data[ "id" ][ str( ans.from_id ) ] = str( len( data[ "user" ] ) )
        json.dump( data, open( "data.json", "w" ) )

@bot.on.message_handler(text='–¢–µ–∫—Å—Ç <name>')
async def photo(ans: Message, name):
    try:
        photo1 = Image.open("rectangle.png")
    except:
        await ans('–û—à–∏–±–∫–∞')
        sys.exit(1)
    
    idraw = ImageDraw.Draw(photo1)
    font = ImageFont.truetype("arial.ttf", size=52)
    idraw.text((400, 200), name, font=font)
    photo1.save('photo1_watermarked.png')
    photo = await photo_uploader.upload_message_photo('photo1_watermarked.png')
    await ans('–î–µ—Ä–∂–∏—Ç–µ —Ñ–æ—Ç–æ:', attachment=photo)

@bot.on.message_handler(text='—Ç–µ–∫—Å—Ç <name>')
async def photo(ans: Message, name):
    try:
        photo1 = Image.open("rectangle.png")
    except:
        await ans('–û—à–∏–±–∫–∞')
        sys.exit(1)
    
    idraw = ImageDraw.Draw(photo1)
    font = ImageFont.truetype("arial.ttf", size=52)
    idraw.text((400, 200), name, font=font)
    photo1.save('photo1_watermarked.png')
    photo = await photo_uploader.upload_message_photo('photo1_watermarked.png')
    await ans('–î–µ—Ä–∂–∏—Ç–µ —Ñ–æ—Ç–æ:', attachment=photo)

@bot.on.message_handler(text='–ª–∞–¥–Ω–æ')
async def wrapper(ans: Message):
    await ans('—à–∏–∫–æ–ª–∞–¥–Ω–æ')

@bot.on.message_handler(text='–±–æ—Ç –ø–æ—à–µ–ª –Ω–∞—Ö—É–π')
async def wrapper(ans: Message):
    await ans('–∑–∞—á')

@bot.on.message_handler(text='/–∑–∞–º–µ—Ç–∫–∏ <name>')
async def wrapper(ans: Message, name):
	reg( ans )
	data = json.load( open( "data.json", "r" ) )
	await ans(f'—Ç–µ–ø–µ—Ä—å –≤–∞—à —Å—Ç–∞—Ç—É—Å: {name}')
	data["status"][str(ans.from_id)] = name
	json.dump( data, open( "data.json", "w" ) )

@bot.on.message_handler(text='–∑–∞–º–µ—Ç–∫–∏')
async def wrapper(ans: Message):
	data = json.load( open( "data.json", "r" ) )
	await ans(f"üóì [id{ans.from_id}|{data['name'][str(ans.from_id)]}], –í–∞—à–∏ –∑–∞–º–µ—Ç–∫–∏:\n\nüí¨ {data['status'][str(ans.from_id)]}")

@bot.on.message_handler(text='–Ω–∏–∫ <name>')
async def wrapper(ans: Message, name):
	reg( ans )
	data = json.load( open( "data.json", "r" ) )
	data["name"][str(ans.from_id)] = name
	await ans(f"–≤–∞—à –Ω–∏–∫ —Ç–µ–ø–µ—Ä—å - {name}")
	json.dump( data, open( "data.json", "w" ) )

@bot.on.message_handler(text='–∞–¥–º–∏–Ω –ø—Ä–∞–≤–∞')
async def wrapper(ans: Message):
	data = json.load( open( "data.json", "r" ) )
	list_admin = [i for i in await bot.api.messages.get_convetsation_members(chat_id = ans.chat_id) if i.is_admin]

	if ans.from_id in list_admin:
		if data["prava"] == 4:
			await ans("–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–¥–º–∏–Ω –ø—Ä–∞–≤–∞")
		else:
			await ans("–í—ã –ø–æ–ª—É—á–∏–ª–∏ –∞–¥–º–∏–Ω –ø—Ä–∞–≤–∞!")

@bot.on.message_handler(text='–∫—Ç–æ —è')
async def wrapper(ans: Message):
	data = json.load( open( "data.json", "r" ) )
	b = data[ 'prava' ][ str( ans.from_id ) ]
	await ans(f"–í—ã [id{ans.from_id}|{data['name'][str(ans.from_id)]}]:  \n\n1.–†–∞–Ω–∫: {b}")

@bot.on.message_handler(text='–∫–∏–∫')
async def wrapper(ans: Message):
	data = json.load( open( "data.json", "r" ) )
	if data["prava"][str(ans.from_id)] == 4:
		await bot.api.messages.remove_chat_user(user_id = ans.reply_message.from_id, chat_id = ans.chat_id)
		await ans('–ë—ã–ª –∏—Å–∫–ª—é—á–µ–Ω!')
	else:
		await ans('–ù—É–∂–Ω–æ –∏–º–µ—Ç—å 4 —Ä–∞–Ω–∫!')

@bot.on.message_handler(text='–ö–∏–∫')
async def wrapper(ans: Message):
	data = json.load( open( "data.json", "r" ) )
	if data["prava"][str(ans.from_id)] == 4:
		await bot.api.messages.remove_chat_user(user_id = ans.reply_message.from_id, chat_id = ans.chat_id)
		await ans('–ë—ã–ª –∏—Å–∫–ª—é—á–µ–Ω!')
	else:
		await ans('–ù—É–∂–Ω–æ –∏–º–µ—Ç—å 4 —Ä–∞–Ω–∫!')

@bot.on.message_handler(text='.–ø–æ–≤—ã—Å–∏—Ç—å')
async def wrapper(ans: Message):
	reg( ans )
	data = json.load( open( "data.json", "r" ) )
	if data["prava"][str(ans.from_id)] == 4:
		data["prava"][str(ans.reply_message.from_id)] += 1
		await ans(f"–í—ã –ø–æ–≤—ã—Å–∏–ª–∏ {data['name'][str(ans.reply_message.from_id)]} –¥–æ {data['prava'][str(ans.reply_message.from_id)]}!")
		json.dump( data, open( "data.json", "w" ) )

@bot.on.message_handler(text='–ø—Ä–µ–¥')
async def wrapper(ans: Message):
	reg( ans )
	data = json.load( open( "data.json", "r" ) )
	if data["prava"][str(ans.from_id)] == 4:
		data["pred"][str(ans.reply_message.from_id)] += 1
		await ans(f"–ë—ã–ª–æ –≤—ã–¥–∞–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ [id{ans.reply_message.from_id}|—á–µ–ª–æ–≤–µ–∫—É]")
		json.dump( data, open( "data.json", "w" ) )

@bot.on.message_handler(text='–ø—Ä–µ–¥ —Å–Ω—è—Ç—å')
async def wrapper(ans: Message):
	reg( ans )
	data = json.load( open( "data.json", "r" ) )
	if data["prava"][str(ans.from_id)] == 4:
		data["pred"][str(ans.reply_message.from_id)] -= 1
		await ans(f"–ë—ã–ª–æ —É–±—Ä–∞–Ω–æ 1 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ [id{ans.reply_message.from_id}|—á–µ–ª–æ–≤–µ–∫—É], –µ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: {data['pred'][str(ans.reply_message.from_id)]}")
		json.dump( data, open( "data.json", "w" ) )

@bot.on.message_handler(text='<da>')
async def wrapper(ans: Message, da):
	reg( ans )
	data = json.load( open( "data.json", "r" ) )
	if data["pred"][str(ans.from_id)] == 3:
		await ans("–ë–æ–ª—å—à–µ 3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π")
		data["pred"][str(ans.from_id)] = 0
		await bot.api.messages.remove_chat_user(user_id = ans.from_id, chat_id = ans.chat_id)
	else:
		pass

@bot.on.message_handler(text='–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å')
async def wrapper(ans: Message, da):
	reg( ans )
	await ans(f"[id{ans.from_id}|{data['name'][str(ans.from_id)]}], –ø–æ—Ü–µ–ª–æ–≤–∞–ª [id{ans.reply_message.from_id}|{data['name'][str(ans.from_id)]}]")
		  
@bot.on.message_handler(text='–ü–æ—Ü–µ–ª–æ–≤–∞—Ç—å')
async def wrapper(ans: Message, da):
	reg( ans )
	await ans(f"[id{ans.from_id}|{data['name'][str(ans.from_id)]}], –ø–æ—Ü–µ–ª–æ–≤–∞–ª [id{ans.reply_message.from_id}|{data['name'][str(ans.from_id)]}]")
			  
bot.run_polling()
             
              
